{"version":3,"sources":["lib/api.js","views/dashboard/New.js"],"names":["httpsAgent","require","Agent","rejectUnauthorized","Axios","axios","create","baseURL","process","timeout","New","props","componentDidMount","editor","grapesjs","init","container","fromElement","width","storageManager","id","type","autosave","autoload","stepsBeforeSave","storeComponents","storeStyles","storeHtml","storeCss","panels","defaults","el","buttons","command","active","togglable","mediaCondition","deviceManager","devices","name","widthMedia","plugins","pluginsOpts","sliderBlock","category","tabsBlock","Commands","add","run","setDevice","pageId","get","then","r","console","log","setState","page","data","title","setComponents","html","setStyle","css","state","match","params","_id","this","post","runCommand","getCss","history","push","catch","e","error","target","value","placeholder","onChange","onTitleChange","size","color","onClick","onSave","Component"],"mappings":"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","file":"static/js/11.630c15e9.chunk.js","sourcesContent":["import axios from 'axios'\r\nvar https = require('https');\r\nconst httpsAgent = new https.Agent({ rejectUnauthorized: true });\r\n\r\nconst Axios = axios.create({\r\n    baseURL: process.env.REACT_APP_BASE_URL,\r\n    httpsAgent: httpsAgent,\r\n    timeout: 500*1000\r\n})\r\n\r\nexport default Axios","import React, { lazy, Component } from 'react'\r\nimport {\r\n    CBadge,\r\n    CButton,\r\n    CButtonGroup,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CProgress,\r\n    CRow,\r\n    CCallout\r\n} from '@coreui/react'\r\n\r\nimport CIcon from '@coreui/icons-react'\r\nimport \"grapesjs/src/styles/scss/main.scss\";\r\nimport 'grapesjs/dist/css/grapes.min.css';\r\n\r\nimport './New.css'\r\nimport grapesjs from 'grapesjs';\r\nimport { Editor } from 'grapesjs-react';\r\n\r\nimport Axios from '../../lib/api';\r\n\r\n\r\nclass New extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: ''\r\n        }\r\n        console.log(props)\r\n        this.pageId = props.match.params._id;\r\n        console.log(this.pageId)\r\n    }\r\n    componentDidMount = () => {\r\n        this.editor = grapesjs.init({\r\n            // Indicate where to init the editor. You can also pass an HTMLElement\r\n            container: '#gjs',\r\n            // Get the content for the canvas directly from the element\r\n            // As an alternative we could use: `components: '<h1>Hello World Component!</h1>'`,\r\n            fromElement: true,\r\n            // Size of the editor\r\n            // height: '300px',\r\n            width: 'auto',\r\n            storageManager: {\r\n                id: 'gjs-',             // Prefix identifier that will be used inside storing and loading\r\n                type: 'local',          // Type of the storage\r\n                autosave: true,         // Store data automatically\r\n                autoload: true,         // Autoload stored data on init\r\n                stepsBeforeSave: 1,     // If autosave enabled, indicates how many changes are necessary before store method is triggered\r\n                storeComponents: true,  // Enable/Disable storing of components in JSON format\r\n                storeStyles: true,      // Enable/Disable storing of rules in JSON format\r\n                storeHtml: true,        // Enable/Disable storing of components as HTML string\r\n                storeCss: true,         // Enable/Disable storing of rules as CSS string\r\n            },\r\n\r\n            // Avoid any default panel\r\n            panels: {\r\n                defaults: [\r\n                    // ...\r\n                    {\r\n                        id: 'panel-devices',\r\n                        el: '.panel__devices',\r\n                        buttons: [{\r\n                            id: 'device-desktop',\r\n                            // label: 'D',\r\n                            command: 'set-device-desktop',\r\n                            active: true,\r\n                            togglable: false,\r\n                        }, {\r\n                            id: 'device-mobile',\r\n                            // label: 'M',\r\n                            command: 'set-device-mobile',\r\n                            togglable: false,\r\n                        }],\r\n                    }]\r\n            },\r\n            mediaCondition: 'min-width', // default is `max-width`\r\n            deviceManager: {\r\n                devices: [{\r\n                    name: 'Mobile',\r\n                    width: '320',\r\n                    widthMedia: '',\r\n                }, {\r\n                    name: 'Desktop',\r\n                    width: '',\r\n                    widthMedia: '1024',\r\n                }]\r\n            },\r\n            plugins: [\r\n                // 'grapesjs-lory-slider',\r\n                // 'grapesjs-tabs',\r\n                // 'grapesjs-custom-code',\r\n                // 'grapesjs-touch',\r\n                // 'grapesjs-parser-postcss',\r\n                // 'grapesjs-tooltip',\r\n                // 'grapesjs-tui-image-editor',\r\n                // 'grapesjs-typed',\r\n                // 'grapesjs-style-bg',\r\n                'gjs-preset-newsletter',\r\n                'gjs-preset-webpage',\r\n            ],\r\n            pluginsOpts: {\r\n                'grapesjs-lory-slider': {\r\n                    sliderBlock: {\r\n                        category: 'Extra'\r\n                    }\r\n                },\r\n                'grapesjs-tabs': {\r\n                    tabsBlock: {\r\n                        category: 'Extra'\r\n                    }\r\n                },\r\n            }\r\n        });\r\n\r\n        // Commands\r\n        this.editor.Commands.add('set-device-desktop', {\r\n            run: editor => editor.setDevice('Desktop')\r\n        });\r\n        this.editor.Commands.add('set-device-mobile', {\r\n            run: editor => editor.setDevice('Mobile')\r\n        });\r\n        this.editor.Commands.add('set-device-tablet', {\r\n            run: editor => editor.setDevice('Tablet')\r\n        });\r\n        if (this.pageId)\r\n            Axios.get(`utility/pages?id=${this.pageId}`).then(r => {\r\n                console.log(this.editor)\r\n                this.setState({ page: r.data[0], title: r.data[0].title })\r\n                this.editor.setComponents(r.data[0].html)\r\n                this.editor.setStyle(r.data[0].css)\r\n            })\r\n    }\r\n    onSave() {\r\n        var { title, page } = this.state;\r\n        Axios.post('utility/add-page', { id: page ? page.id : null, html: this.editor.runCommand('gjs-get-inlined-html'), css: this.editor.getCss(), title: title })\r\n            .then(r => {\r\n                console.log(r)\r\n                this.props.history.push('/dashboard');\r\n            })\r\n            .catch(e => console.error(e))\r\n\r\n\r\n    }\r\n    onTitleChange(e) {\r\n        this.setState({ title: e.target.value })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <CRow>\r\n                    <CCol>\r\n                        <CCard>\r\n                            <CCardHeader>\r\n                                Add New Page\r\n\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <input type=\"text\" value={this.state.title} placeholder=\"Title \" onChange={(e) => this.onTitleChange(e)} />\r\n                                <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={() => { this.onSave() }}><CIcon name=\"cil-scrubber\" /> Save</CButton>\r\n\r\n                                {/* <Editor /> */}\r\n                                <div id=\"gjs\">\r\n                                    <h1>Hello World Component!</h1>\r\n                                </div>\r\n\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default New\r\n"],"sourceRoot":""}