{"version":3,"sources":["views/admin/Users/UserEdit.js"],"names":["UserEdit","props","componentDidMount","user_id","Axios","get","then","r","console","log","getCurrentPermission","data","password","user","setState","first_name","last_name","company_name","email","state","loading","password2","page_list","match","params","_id","parseInt","post","this","forEach","user_page","p","find","id","page_id","edit","view","lead","sort","p1","p2","history","goBack","e","field","target","value","url","swal","title","icon","buttons","confirm","text","visible","className","closeModal","catch","uploadData","item","push","user_page_list","variant","md","lg","xl","row","xs","htmlFor","placeholder","onChange","onInputChange","name","type","autoComplete","onPasswordChange","onPassword2Change","color","block","onClick","onTapRegister","role","aria-hidden","map","page","date","moment","Date","createdAt","format","key","defaultChecked","checked","onTapPermission","Component"],"mappings":"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","file":"static/js/18.5e480f6a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    // CBadge,\r\n    CButton,\r\n    // CButtonGroup,\r\n    CCard,\r\n    CCardBody,\r\n    // CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    // CProgress,\r\n    CRow,\r\n    // CCallout,\r\n    // CCardFooter,\r\n    CContainer,\r\n    CForm,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupPrepend,\r\n    CInputGroupText,\r\n    CTabs,\r\n    CTabPane,\r\n    CTabContent,\r\n    CFormGroup,\r\n    CLabel,\r\n    CSwitch,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n} from '@coreui/react'\r\nimport * as moment from 'moment'\r\n\r\nimport CIcon from '@coreui/icons-react'\r\nimport \"grapesjs/src/styles/scss/main.scss\";\r\nimport 'grapesjs/dist/css/grapes.min.css';\r\n\r\n// import grapesjs from 'grapesjs';\r\n// import { Editor } from 'grapesjs-react';\r\n\r\nimport Axios from '../../../lib/api';\r\n\r\nimport swal from 'sweetalert';\r\n\r\nclass UserEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            first_name: '',\r\n            last_name: '',\r\n            company_name: '',\r\n\r\n            email: '',\r\n            password: '',\r\n            password2: '',\r\n            // id: null\r\n            page_list: []//page list\r\n        }\r\n        var user_id = props.match.params._id;\r\n        if (parseInt(user_id) > 0) this.user_id = user_id;\r\n        console.log(this.user_id, props)\r\n    }\r\n    getCurrentPermission(page_list) {\r\n        Axios.post('admin/users/getPermission', { user_id: this.user_id }).then(r => {\r\n            r.data.forEach(user_page => {\r\n                var p = page_list.find(p => p.id === user_page.page_id);\r\n                if (p) {\r\n                    p.edit = user_page.edit;\r\n                    p.view = user_page.view;\r\n                    p.lead = user_page.lead;\r\n                }\r\n            });\r\n            page_list = page_list.sort((p1, p2) => {\r\n                if (p1.view != null || p1.edit != null || p1.lead != null) return -1\r\n                if (p2.view != null || p2.edit != null || p2.lead != null) return 1\r\n                return 0;\r\n            })\r\n            this.setState({ page_list: page_list });\r\n        })\r\n    }\r\n    componentDidMount = () => {\r\n        if (this.user_id) {\r\n            Axios.get('admin/page/pages').then(r => {\r\n                console.log(r)\r\n\r\n                this.getCurrentPermission(r.data);\r\n            })\r\n            Axios.get(`admin/users/${this.user_id}`).then(r => {\r\n                console.log(r.data.data[0])\r\n                delete r.data.data[0].password\r\n                var user = r.data.data[0];\r\n                this.setState({\r\n                    first_name: user.first_name || '',\r\n                    last_name: user.last_name || '',\r\n                    company_name: user.company_name || '',\r\n                    email: user.email || '',\r\n                    // id: user.id,\r\n                })\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    onBack() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    onInputChange(e, field) {\r\n        this.setState({ [field]: e.target.value })\r\n    }\r\n\r\n\r\n    onFirstNameChange(e) {\r\n        this.setState({ first_name: e.target.value })\r\n    }\r\n\r\n    onLastNameChange(e) {\r\n        this.setState({ last_name: e.target.value })\r\n    }\r\n\r\n    onCompanyNameChange(e) {\r\n        this.setState({ company_name: e.target.value })\r\n    }\r\n\r\n    onEmailChange(e) {\r\n        this.setState({ email: e.target.value })\r\n    }\r\n    onPasswordChange(e) {\r\n        this.setState({ password: e.target.value })\r\n    }\r\n    onPassword2Change(e) {\r\n        this.setState({ password2: e.target.value })\r\n    }\r\n    onTapRegister() {\r\n        this.setState({ loading: true })\r\n        var data = this.state;\r\n        var url = 'users/signup';\r\n        if (this.user_id) {\r\n            url = 'users/user-info';\r\n            data.id = this.user_id\r\n        }\r\n\r\n\r\n        Axios.post(url, data).then(r => {\r\n            console.log(r.data)\r\n            swal({\r\n                title: data.id == null ? \"Successfully created.\" : \"Successfully updated.\",\r\n                // text: \"Check your email\",\r\n                icon: \"success\",\r\n                buttons: {\r\n                    confirm: {\r\n                        text: \"OK\",\r\n                        value: true,\r\n                        visible: true,\r\n                        className: \"\",\r\n                        closeModal: true\r\n                    },\r\n                }\r\n\r\n            }).then(() => {\r\n                this.props.history.goBack();\r\n            })\r\n\r\n            this.setState({ loading: false })\r\n        })\r\n            .catch(e => {\r\n                console.log(e)\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n\r\n    onTapPermission() {\r\n        this.setState({ loading: true })\r\n        var page_list = this.state.page_list;\r\n\r\n        var uploadData = [];\r\n        page_list.forEach(item => {\r\n            if (!item.view && !item.edit && !item.lead) return;\r\n\r\n            uploadData.push({\r\n                user_id: this.user_id,\r\n                page_id: item.id,\r\n                edit: item.edit,\r\n                view: item.view,\r\n                lead: item.lead\r\n            });\r\n\r\n        });\r\n\r\n        Axios.post('admin/users/addPermission', { user_id: this.user_id, user_page_list: uploadData }).then(r => {\r\n            console.log(r.data)\r\n            swal({\r\n                title: \"Successfully updated.\",\r\n                // text: \"Check your email\",\r\n                icon: \"success\",\r\n                buttons: {\r\n                    confirm: {\r\n                        text: \"OK\",\r\n                        value: true,\r\n                        visible: true,\r\n                        className: \"\",\r\n                        closeModal: true\r\n                    },\r\n                }\r\n\r\n            }).then(() => {\r\n                this.props.history.goBack();\r\n            })\r\n\r\n            this.setState({ loading: false })\r\n        })\r\n            .catch(e => {\r\n                console.log(e)\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n    render() {\r\n        var { loading, page_list } = this.state;\r\n        return (\r\n            <>\r\n                <CCard>\r\n                    <CCardHeader>{this.user_id ? 'Edit User' : 'New User'}</CCardHeader>\r\n                    <CCardBody>\r\n                        <CTabs>\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                    <CNavLink>\r\n                                        Personal Information\r\n                                            </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                    <CNavLink>\r\n                                        Permission\r\n                                          </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n\r\n                                <CTabPane>\r\n                                    <CContainer className=\"p-4\">\r\n                                        <CRow className=\"justify-content-center\">\r\n                                            <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                                                <CCard className=\"mx-4\">\r\n                                                    <CCardBody className=\"p-4\">\r\n                                                        <CForm className=\"was-validated1 mt-1\">\r\n\r\n                                                            <CFormGroup row className=\"my-0\">\r\n                                                                <CCol xs=\"6\">\r\n                                                                    <CFormGroup>\r\n                                                                        <CLabel htmlFor=\"first_name\">First Name</CLabel>\r\n                                                                        <CInput id=\"first_name\" placeholder=\"First Name\" value={this.state.first_name}\r\n                                                                            onChange={(e) => this.onInputChange(e, 'first_name')} />\r\n                                                                    </CFormGroup>\r\n                                                                </CCol>\r\n                                                                <CCol xs=\"6\">\r\n                                                                    <CFormGroup>\r\n                                                                        <CLabel htmlFor=\"last_name\">Last Name</CLabel>\r\n                                                                        <CInput id=\"last_name\" placeholder=\"Last Name\" value={this.state.last_name}\r\n                                                                            onChange={(e) => this.onInputChange(e, 'last_name')} />\r\n                                                                    </CFormGroup>\r\n                                                                </CCol>\r\n                                                            </CFormGroup>\r\n\r\n\r\n                                                            <CFormGroup>\r\n                                                                <CLabel htmlFor=\"company_name\">Company Name</CLabel>\r\n                                                                <CInput id=\"company_name\" placeholder=\"Enter Company Name\" value={this.state.company_name}\r\n                                                                    onChange={(e) => this.onInputChange(e, 'company_name')} />\r\n                                                            </CFormGroup>\r\n\r\n                                                            <CFormGroup>\r\n                                                                <CLabel htmlFor=\"email\">Email</CLabel>\r\n                                                                <CInput id=\"email\" placeholder=\"Email\" value={this.state.email}\r\n                                                                    onChange={(e) => this.onInputChange(e, 'email')} />\r\n                                                            </CFormGroup>\r\n\r\n                                                            <CInputGroup className=\"mb-3\">\r\n                                                                <CInputGroupPrepend>\r\n                                                                    <CInputGroupText>\r\n                                                                        <CIcon name=\"cil-lock-locked\" />\r\n                                                                    </CInputGroupText>\r\n                                                                </CInputGroupPrepend>\r\n                                                                <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"new-password\" value={this.state.password} onChange={(e) => this.onPasswordChange(e)} />\r\n                                                            </CInputGroup>\r\n                                                            <CInputGroup className=\"mb-4\">\r\n                                                                <CInputGroupPrepend>\r\n                                                                    <CInputGroupText>\r\n                                                                        <CIcon name=\"cil-lock-locked\" />\r\n                                                                    </CInputGroupText>\r\n                                                                </CInputGroupPrepend>\r\n                                                                <CInput type=\"password\" placeholder=\"Repeat password\" autoComplete=\"new-password\" value={this.state.password2} onChange={(e) => this.onPassword2Change(e)} />\r\n                                                            </CInputGroup>\r\n                                                            <CButton color=\"success\" block onClick={() => { this.onTapRegister(); }}>{this.user_id ? 'Update Account' : 'Create Account'}\r\n                                                                {loading && <span className=\"spinner-border spinner-border-sm ml-1\" role=\"status\" aria-hidden=\"true\"></span>}\r\n                                                            </CButton>\r\n                                                        </CForm>\r\n                                                    </CCardBody>\r\n                                                </CCard>\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                    </CContainer>\r\n                                </CTabPane>\r\n\r\n                                <CTabPane>\r\n                                    Page List\r\n                                            <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\r\n                                        <thead className=\"thead-light\">\r\n                                            <tr>\r\n                                                <th>Name</th>\r\n                                                <th className=\"text-right\">Available Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {page_list.map(page => {\r\n                                                var date = moment(new Date(page.createdAt)).format('DD MMMM YYYY')\r\n                                                return <tr key={page.id}>\r\n\r\n                                                    <td>\r\n                                                        <div>{page.title}</div>\r\n                                                        <div className=\"small text-muted\">\r\n                                                            <span>New</span> | Registered: {date}\r\n                                                        </div>\r\n                                                    </td>\r\n\r\n                                                    <td className=\"text-right\">\r\n                                                        <div className=\"d-flex justify-content-end\">\r\n                                                            <div className=\"col-61 text-center\">\r\n                                                                <div>View</div>\r\n                                                                <CSwitch className={'mx-1'} color={'primary'} defaultChecked={page.view} onChange={(e) => page.view = e.target.checked} />\r\n                                                            </div>\r\n                                                            <div className=\"col-1s6 d-flex1 text-center\">\r\n                                                                <div>View Lead</div>\r\n                                                                <CSwitch className={'mx-1'} color={'success'} defaultChecked={page.lead} onChange={(e) => page.lead = e.target.checked} />\r\n                                                            </div>\r\n                                                            <div className=\"col-1s6 d-flex1 text-center\">\r\n                                                                <div>Edit</div>\r\n                                                                <CSwitch className={'mx-1'} color={'danger'} defaultChecked={page.edit} onChange={(e) => page.edit = e.target.checked} />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                            })}\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                    <CButton color=\"success\" className=\"mt-2\" onClick={() => { this.onTapPermission(); }}>{this.user_id ? 'Update Permisson' : 'Create Permisson'}\r\n                                        {loading && <span className=\"spinner-border spinner-border-sm ml-1\" role=\"status\" aria-hidden=\"true\"></span>}\r\n                                    </CButton>\r\n                                </CTabPane>\r\n\r\n                            </CTabContent>\r\n                        </CTabs>\r\n\r\n                    </CCardBody>\r\n                </CCard>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserEdit\r\n"],"sourceRoot":""}