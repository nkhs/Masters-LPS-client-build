{"version":3,"sources":["reusable/DocsLink.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","views/notifications/alerts/Alerts.js"],"names":["React","memo","props","name","text","rest","href","className","rel","target","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","from","test","Alerts","useState","visible","setVisible","xs","md","color","closeButton","show","onShowChange","striped","Number","size","onClick"],"mappings":"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","file":"static/js/18.bb96acfe.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import React from 'react'\nimport {\n  CAlert,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CLink,\n  CProgress,\n  CRow\n} from '@coreui/react'\nimport { DocsLink } from 'src/reusable'\n\nconst Alerts = () => {\n  const [visible, setVisible] = React.useState(10)\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <DocsLink name=\"CAlert\"/>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"primary\">\n                This is a primary alert — check it out!\n              </CAlert>\n              <CAlert color=\"secondary\">\n                This is a secondary alert — check it out!\n              </CAlert>\n              <CAlert color=\"success\">\n                This is a success alert — check it out!\n              </CAlert>\n              <CAlert color=\"danger\">\n                This is a danger alert — check it out!\n              </CAlert>\n              <CAlert color=\"warning\">\n                This is a warning alert — check it out!\n              </CAlert>\n              <CAlert color=\"info\">\n                This is a info alert — check it out!\n              </CAlert>\n              <CAlert color=\"light\">\n                This is a light alert — check it out!\n              </CAlert>\n              <CAlert color=\"dark\">\n                This is a dark alert — check it out!\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> use <code>.alert-link</code> to provide links</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"primary\">\n                {/*eslint-disable-next-line*/}\n                This is a primary alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"secondary\">\n                {/*eslint-disable-next-line*/}\n                This is a secondary alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"success\">\n                {/*eslint-disable-next-line*/}\n                This is a success alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"danger\">\n                {/*eslint-disable-next-line*/}\n                This is a danger alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"warning\">\n                {/*eslint-disable-next-line*/}\n                This is a warning alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"info\">\n                {/*eslint-disable-next-line*/}\n                This is a info alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"light\">\n                {/*eslint-disable-next-line*/}\n                This is a light alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"dark\">\n                {/*eslint-disable-next-line*/}\n                This is a dark alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> additional content</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"success\">\n                <h4 className=\"alert-heading\">Well done!</h4>\n                <p>\n                  Aww yeah, you successfully read this important alert message. This example text is going\n                  to run a bit longer so that you can see how spacing within an alert works with this kind\n                  of content.\n                </p>\n                <hr />\n                <p className=\"mb-0\">\n                  Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\n                </p>\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> dismissing</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert\n                color=\"info\"\n                closeButton\n              >\n                I am an dismissible alert!\n              </CAlert>\n              <CAlert\n                color=\"warning\"\n                show={visible}\n                closeButton\n                onShowChange={setVisible}\n              >\n                I will be closed in {visible} seconds!\n                <CProgress\n                  striped\n                  color=\"warning\"\n                  value={Number(visible) * 10}\n                  size=\"xs\"\n                  className=\"mb-3\"\n                />\n              </CAlert>\n\n              <CButton color=\"primary\" onClick={() => setVisible(10)}>\n                Reset timer\n              </CButton>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Alerts\n"],"sourceRoot":""}