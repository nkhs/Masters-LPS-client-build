{"version":3,"sources":["views/admin/Users/UserNew.js"],"names":["UserNew","props","componentDidMount","user_id","Axios","get","then","r","console","log","setState","page_list","data","password","user","first_name","last_name","company_name","email","state","loading","password2","match","params","_id","parseInt","this","history","goBack","e","field","target","value","url","id","post","swal","title","icon","buttons","confirm","text","visible","className","closeModal","catch","variant","md","lg","xl","row","xs","htmlFor","placeholder","onChange","onInputChange","name","type","autoComplete","onPasswordChange","onPassword2Change","color","block","onClick","onTapRegister","role","aria-hidden","Component"],"mappings":"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","file":"static/js/19.d09b77b5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    // CBadge,\r\n    CButton,\r\n    // CButtonGroup,\r\n    CCard,\r\n    CCardBody,\r\n    // CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    // CProgress,\r\n    CRow,\r\n    // CCallout,\r\n    // CCardFooter,\r\n    CContainer,\r\n    CForm,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupPrepend,\r\n    CInputGroupText,\r\n    CTabs,\r\n    CTabPane,\r\n    CTabContent,\r\n    CFormGroup,\r\n    CLabel,\r\n    // CInvalidFeedback,\r\n    // CValidFeedback,\r\n    // CSwitch,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n} from '@coreui/react'\r\n// import * as moment from 'moment'\r\n\r\nimport CIcon from '@coreui/icons-react'\r\nimport \"grapesjs/src/styles/scss/main.scss\";\r\nimport 'grapesjs/dist/css/grapes.min.css';\r\n\r\n// import grapesjs from 'grapesjs';\r\n// import { Editor } from 'grapesjs-react';\r\n\r\nimport Axios from '../../../lib/api';\r\n\r\nimport swal from 'sweetalert';\r\n\r\nclass UserNew extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            first_name: '',\r\n            last_name: '',\r\n            company_name: '',\r\n\r\n            email: '',\r\n            password: '',\r\n            password2: '',\r\n            // id: null\r\n            page_list: []//page list\r\n        }\r\n        var user_id = props.match.params._id;\r\n        if (parseInt(user_id) > 0) this.user_id = user_id;\r\n        console.log(this.user_id, props)\r\n    }\r\n    componentDidMount = () => {\r\n        if (this.user_id) {\r\n            Axios.get('admin/page/pages').then(r => {\r\n                console.log(r)\r\n                this.setState({ page_list: r.data })\r\n            })\r\n            Axios.get(`admin/users/${this.user_id}`).then(r => {\r\n                console.log(r.data.data[0])\r\n                delete r.data.data[0].password\r\n                var user = r.data.data[0];\r\n                this.setState({\r\n                    first_name: user.first_name || '',\r\n                    last_name: user.last_name || '',\r\n                    company_name: user.company_name || '',\r\n                    email: user.email || '',\r\n                    // id: user.id,\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n    onBack() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    onInputChange(e, field) {\r\n        this.setState({ [field]: e.target.value })\r\n    }\r\n\r\n\r\n    onFirstNameChange(e) {\r\n        this.setState({ first_name: e.target.value })\r\n    }\r\n\r\n    onLastNameChange(e) {\r\n        this.setState({ last_name: e.target.value })\r\n    }\r\n\r\n    onCompanyNameChange(e) {\r\n        this.setState({ company_name: e.target.value })\r\n    }\r\n\r\n    onEmailChange(e) {\r\n        this.setState({ email: e.target.value })\r\n    }\r\n    onPasswordChange(e) {\r\n        this.setState({ password: e.target.value })\r\n    }\r\n    onPassword2Change(e) {\r\n        this.setState({ password2: e.target.value })\r\n    }\r\n    onTapRegister() {\r\n        this.setState({ loading: true })\r\n        var data = this.state;\r\n        var url = 'users/signup';\r\n        if (this.user_id) {\r\n            url = 'users/user-info';\r\n            data.id = this.user_id\r\n        }\r\n\r\n\r\n        Axios.post(url, data).then(r => {\r\n            console.log(r.data)\r\n            swal({\r\n                title: data.id == null ? \"Successfully created.\" : \"Successfully updated.\",\r\n                // text: \"Check your email\",\r\n                icon: \"success\",\r\n                buttons: {\r\n                    confirm: {\r\n                        text: \"OK\",\r\n                        value: true,\r\n                        visible: true,\r\n                        className: \"\",\r\n                        closeModal: true\r\n                    },\r\n                }\r\n\r\n            }).then(() => {\r\n                this.props.history.goBack();\r\n            })\r\n\r\n            this.setState({ loading: false })\r\n        })\r\n            .catch(e => {\r\n                console.log(e)\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n    render() {\r\n        var { loading } = this.state;\r\n        return (\r\n            <>\r\n                <CRow>\r\n                    <CCol>\r\n                        <CCard>\r\n                            <CCardHeader>{this.user_id ? 'Edit User' : 'New User'}</CCardHeader>\r\n                            <CCardBody>\r\n                                <CTabs>\r\n                                    <CNav variant=\"tabs\">\r\n                                        <CNavItem>\r\n                                            <CNavLink>\r\n                                                Personal Information\r\n                                            </CNavLink>\r\n                                        </CNavItem>\r\n                                        {/* <CNavItem>\r\n                                            <CNavLink>\r\n                                                Permission\r\n                                          </CNavLink>\r\n                                        </CNavItem> */}\r\n                                    </CNav>\r\n                                    <CTabContent>\r\n\r\n                                        <CTabPane>\r\n                                            <CContainer className=\"p-4\">\r\n                                                <CRow className=\"justify-content-center\">\r\n                                                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                                                        <CCard className=\"mx-4\">\r\n                                                            <CCardBody className=\"p-4\">\r\n                                                                <CForm className=\"was-validated1 mt-1\">\r\n\r\n                                                                    <CFormGroup row className=\"my-0\">\r\n                                                                        <CCol xs=\"6\">\r\n                                                                            <CFormGroup>\r\n                                                                                <CLabel htmlFor=\"first_name\">First Name</CLabel>\r\n                                                                                <CInput id=\"first_name\" placeholder=\"First Name\" value={this.state.first_name}\r\n                                                                                    onChange={(e) => this.onInputChange(e, 'first_name')} />\r\n                                                                            </CFormGroup>\r\n                                                                        </CCol>\r\n                                                                        <CCol xs=\"6\">\r\n                                                                            <CFormGroup>\r\n                                                                                <CLabel htmlFor=\"last_name\">Last Name</CLabel>\r\n                                                                                <CInput id=\"last_name\" placeholder=\"Last Name\" value={this.state.last_name}\r\n                                                                                    onChange={(e) => this.onInputChange(e, 'last_name')} />\r\n                                                                            </CFormGroup>\r\n                                                                        </CCol>\r\n                                                                    </CFormGroup>\r\n\r\n\r\n                                                                    <CFormGroup>\r\n                                                                        <CLabel htmlFor=\"company_name\">Company Name</CLabel>\r\n                                                                        <CInput id=\"company_name\" placeholder=\"Enter Company Name\" value={this.state.company_name}\r\n                                                                            onChange={(e) => this.onInputChange(e, 'company_name')} />\r\n                                                                    </CFormGroup>\r\n\r\n                                                                    <CFormGroup>\r\n                                                                        <CLabel htmlFor=\"email\">Email</CLabel>\r\n                                                                        <CInput id=\"email\" placeholder=\"Email\" value={this.state.email}\r\n                                                                            onChange={(e) => this.onInputChange(e, 'email')} />\r\n                                                                    </CFormGroup>\r\n\r\n                                                                    <CInputGroup className=\"mb-3\">\r\n                                                                        <CInputGroupPrepend>\r\n                                                                            <CInputGroupText>\r\n                                                                                <CIcon name=\"cil-lock-locked\" />\r\n                                                                            </CInputGroupText>\r\n                                                                        </CInputGroupPrepend>\r\n                                                                        <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"new-password\" value={this.state.password} onChange={(e) => this.onPasswordChange(e)} />\r\n                                                                    </CInputGroup>\r\n                                                                    <CInputGroup className=\"mb-4\">\r\n                                                                        <CInputGroupPrepend>\r\n                                                                            <CInputGroupText>\r\n                                                                                <CIcon name=\"cil-lock-locked\" />\r\n                                                                            </CInputGroupText>\r\n                                                                        </CInputGroupPrepend>\r\n                                                                        <CInput type=\"password\" placeholder=\"Repeat password\" autoComplete=\"new-password\" value={this.state.password2} onChange={(e) => this.onPassword2Change(e)} />\r\n                                                                    </CInputGroup>\r\n                                                                    <CButton color=\"success\" block onClick={() => { this.onTapRegister(); }}>{this.user_id ? 'Update Account' : 'Create Account'}\r\n                                                                        {loading && <span className=\"spinner-border spinner-border-sm ml-1\" role=\"status\" aria-hidden=\"true\"></span>}\r\n                                                                    </CButton>\r\n                                                                </CForm>\r\n                                                            </CCardBody>\r\n                                                        </CCard>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                            </CContainer>\r\n                                        </CTabPane>\r\n\r\n                                        {/* <CTabPane>\r\n                                            Page List\r\n                                            <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\r\n                                                <thead className=\"thead-light\">\r\n                                                    <tr>\r\n                                                        <th>Name</th>\r\n                                                        <th className=\"text-right\">Available Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {page_list.map(page => {\r\n                                                        var date = moment(new Date(page.createdAt)).format('DD MMMM YYYY')\r\n                                                        return <tr key={page.id}>\r\n\r\n                                                            <td>\r\n                                                                <div>{page.title}</div>\r\n                                                                <div className=\"small text-muted\">\r\n                                                                    <span>New</span> | Registered: {date}\r\n                                                                </div>\r\n                                                            </td>\r\n\r\n                                                            <td className=\"text-right\">\r\n                                                                <div className=\"d-flex justify-content-end\">\r\n                                                                    <div className=\"col-61 text-center\">\r\n                                                                        <div>View</div>\r\n                                                                        <CSwitch className={'mx-1'} color={'primary'} defaultChecked />\r\n                                                                    </div>\r\n                                                                    <div className=\"col-1s6 d-flex1 text-center\">\r\n                                                                        <div>View Lead</div>\r\n                                                                        <CSwitch className={'mx-1'} color={'success'} defaultChecked />\r\n                                                                    </div>\r\n                                                                    <div className=\"col-1s6 d-flex1 text-center\">\r\n                                                                        <div>Edit</div>\r\n                                                                        <CSwitch className={'mx-1'} color={'danger'} />\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </td>\r\n                                                        </tr>\r\n\r\n                                                    })}\r\n\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                            <CButton color=\"success\" className=\"mt-2\" onClick={() => { this.onTapRegister(); }}>{this.user_id ? 'Update Permisson' : 'Create Permisson'}\r\n                                                {loading && <span className=\"spinner-border spinner-border-sm ml-1\" role=\"status\" aria-hidden=\"true\"></span>}\r\n                                            </CButton>\r\n                                        </CTabPane> */}\r\n\r\n                                    </CTabContent>\r\n                                </CTabs>\r\n\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserNew\r\n"],"sourceRoot":""}