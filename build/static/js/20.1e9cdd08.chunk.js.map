{"version":3,"sources":["views/admin/Users/Users.js"],"names":["Users","props","componentDidMount","Axios","get","then","r","console","log","setState","list","data","state","id","this","history","push","item","swal","title","text","icon","buttons","dangerMode","willDelete","delete","filter","page","type","size","color","onClick","name","className","map","date","moment","Date","createdAt","format","key","fullName","email","company_name","onEdit","onDelete","Component"],"mappings":"8NAqBMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,kBAAoB,WAClBC,IAAMC,IAAI,gBAAgBC,MAAK,SAAAC,GAC7BC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAEC,KAAMJ,EAAEK,KAAKA,WAP/B,EAAKC,MAAQ,CACXF,KAAM,IAHS,E,mDAYZG,GACLC,KAAKb,MAAMc,QAAQC,KAAnB,uBAAwCH,M,6BAEnCA,GACLC,KAAKb,MAAMc,QAAQC,KAAnB,uBAAwCH,M,+BAEjCI,GAAO,IAAD,OACbC,IAAK,CACHC,MAAO,gBACPC,KAAM,2DACNC,KAAM,UACNC,SAAS,EACTC,YAAY,IAEXlB,MAAK,SAAAmB,GACAA,GACFrB,IAAMsB,OAAN,sBAA4BR,EAAKJ,KAAMR,MAAK,SAAAC,GAC1CC,QAAQC,IAAIF,GADmC,IAEzCI,EAAS,EAAKE,MAAdF,KACNA,EAAOA,EAAKgB,QAAO,SAAAC,GAAI,OAAIA,EAAKd,KAAOI,EAAKJ,MAC5C,EAAKJ,SAAS,CAAEC,KAAMA,Y,+BAiBtB,IAAD,OACDA,EAASI,KAAKF,MAAdF,KACN,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,kBAGA,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAASkB,KAAK,SAASC,KAAK,KAAKC,MAAM,UAAUC,QAAS,WAAQ,EAAK9B,MAAMc,QAAQC,KAAK,sBAAwB,kBAAC,IAAD,CAAOgB,KAAK,iBAA9H,QAEA,6BAEA,2BAAOC,UAAU,0DACf,2BAAOA,UAAU,eACf,4BACE,oCACA,uCACA,wBAAIA,UAAU,cAAd,UAGJ,+BACGvB,EAAKwB,KAAI,SAAAP,GACR,IAAIQ,EAAOC,EAAO,IAAIC,KAAKV,EAAKW,YAAYC,OAAO,gBACnD,OAAO,wBAAIC,IAAKb,EAAKd,IAEnB,4BACE,6BAAMc,EAAKc,UAAYd,EAAKe,OAC5B,yBAAKT,UAAU,oBACb,qCADF,kBACkCE,IAGpC,4BAAKR,EAAKgB,cAEV,wBAAIV,UAAU,cAEZ,4BAAQA,UAAU,wBAAwBF,QAAS,kBAAM,EAAKa,OAAOjB,EAAKd,MAA1E,QACA,4BAAQoB,UAAU,uBAAuBF,QAAS,kBAAM,EAAKc,SAASlB,KAAtE,0B,GA1FNmB,aA6GL9C","file":"static/js/20.1e9cdd08.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n  CButton,\n\n  CCard,\n  CCardBody,\n\n  CCardHeader,\n  CCol,\n\n  CRow,\n\n} from '@coreui/react'\nimport swal from 'sweetalert';\nimport CIcon from '@coreui/icons-react'\n\nimport * as moment from 'moment'\nimport Axios from '../../../lib/api';\n\n\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: []\n    }\n  }\n  componentDidMount = () => {\n    Axios.get('admin/users/').then(r => {\n      console.log(r)\n      this.setState({ list: r.data.data })\n    })\n  }\n  onView(id) {\n    this.props.history.push(`/admin/users/${id}`);\n  }\n  onEdit(id) {\n    this.props.history.push(`/admin/users/${id}`);\n  }\n  onDelete(item) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this user!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n      .then(willDelete => {\n        if (willDelete)\n          Axios.delete(`admin/users/${item.id}`).then(r => {\n            console.log(r)\n            var { list } = this.state;\n            list = list.filter(page => page.id !== item.id);\n            this.setState({ list: list })\n          })\n      })\n\n  }\n  // onDuplicate(item) {\n  //   try {\n  //     item = JSON.parse(JSON.stringify(item))\n  //     delete item.id\n  //     Axios.post('utility/add-page', item).then(r => {\n  //       console.log(r)\n  //       this.props.history.push(`/admin/edit/${r.data.id}`);\n  //     })\n  //   } catch (e) {\n  //     console.log(e)\n  //   }\n  // }\n  render() {\n    var { list } = this.state;\n    return (\n      <>\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardHeader>\n                User List\n              </CCardHeader>\n              <CCardBody>\n\n                <CButton type=\"submit\" size=\"sm\" color=\"warning\" onClick={() => { this.props.history.push('/admin/users/new'); }}><CIcon name=\"cil-scrubber\" /> Add</CButton>\n\n                <br />\n\n                <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th>Name</th>\n                      <th>Company</th>\n                      <th className=\"text-right\">View</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {list.map(page => {\n                      var date = moment(new Date(page.createdAt)).format('DD MMMM YYYY')\n                      return <tr key={page.id}>\n\n                        <td>\n                          <div>{page.fullName || page.email}</div>\n                          <div className=\"small text-muted\">\n                            <span>New</span> | Registered: {date}\n                          </div>\n                        </td>\n                        <td>{page.company_name}</td>\n\n                        <td className=\"text-right\">\n                          {/* <button className=\"small btn btn-success\" onClick={() => this.onView(page.id)}>View</button> */}\n                          <button className=\"small btn btn-primary\" onClick={() => this.onEdit(page.id)}>Edit</button>\n                          <button className=\"small btn btn-danger\" onClick={() => this.onDelete(page)}>Delete</button>\n                          {/* <button className=\"small btn btn-info\" onClick={() => this.onDuplicate(page)}>Duplicate</button> */}\n                        </td>\n                      </tr>\n\n                    })}\n\n                  </tbody>\n                </table>\n\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </>\n    )\n  }\n}\n\nexport default Users\n"],"sourceRoot":""}