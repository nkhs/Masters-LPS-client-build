{"version":3,"sources":["views/admin/widgets/WidgetViewPoweredBy.js"],"names":["REACT_APP_BASE_URL","require","default","CONFIG","max_wizard","externel_links","WidgetViewPoweredBy","props","componentDidMount","Axios","get","state","title","then","r","data","v","options","JSON","parse","op","stringify","isLoading","setState","marginTop","marginBottom","paddingTop","paddingBottom","paddingLeft","paddingRight","height","align","maxWidth","showColorSetting","showPaddingSetting","showLogoSetting","background","color","opacity","company","history","location","pathname","split","slice","pop","wizard_step","fontFamily","logoSrc","logoWidth","logoHeight","logoPosition","logoPositionX","logoPositionY","logoCroppedImageUrl","logoCrop","unit","width","ref","React","createRef","javascript_ref","css_ref","logo_croper","html","this","current","innerHTML","js","css","post","console","log","goBack","catch","e","error","logo_blob","formData","FormData","append","headers","onLogoChanged","src","setTimeout","_save","column","target","value","image","crop","fileName","canvas","document","createElement","naturalWidth","naturalHeight","scaleX","scaleY","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","name","window","URL","revokeObjectURL","fileUrl","createObjectURL","logoImageRef","getCroppedImg","croppedImageUrl","event","reader","FileReader","addEventListener","result","readAsDataURL","files","className","htmlFor","type","onChange","valueChange","placeholder","onClick","show","accept","readFile","viewMode","guides","minCropBoxHeight","minCropBoxWidth","responsive","autoCropArea","checkOrientation","onInitialized","instance","ready","getCroppedCanvas","toDataURL","cropend","min","max","step","disabled","size","onSave","role","aria-hidden","style","textAlign","margin","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","backgroundPositionX","backgroundPositionY","display","Component"],"mappings":"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","file":"static/js/25.7d6d85e8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    CCard,\r\n    CCardHeader,\r\n    CCollapse,\r\n    CCardBody\r\n} from '@coreui/react'\r\n\r\nimport {\r\n    CButton,\r\n\r\n} from '@coreui/react'\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nimport CIcon from '@coreui/icons-react'\r\nimport \"grapesjs/src/styles/scss/main.scss\";\r\nimport 'grapesjs/dist/css/grapes.min.css';\r\n\r\nimport Axios from '../../../lib/api';\r\n// import swal from 'sweetalert';\r\n\r\n// import $ from 'jquery'\r\nconst REACT_APP_BASE_URL = require('../../../lib/env').default;\r\n\r\nvar CONFIG = {\r\n    'whatsapp': {\r\n        max_wizard: 2\r\n    },\r\n    'call-button': {\r\n        max_wizard: 2\r\n    },\r\n    'powered-by': {\r\n        max_wizard: 2\r\n    },\r\n\r\n}\r\n\r\nvar externel_links = [\r\n\r\n]\r\n\r\nclass WidgetViewPoweredBy extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n\r\n            paddingTop: 14,\r\n            paddingBottom: 7,\r\n            paddingLeft: 7,\r\n            paddingRight: 7,\r\n            height: 50,\r\n\r\n            align: 'center',\r\n            maxWidth: 600,\r\n\r\n            showColorSetting: false,\r\n            showPaddingSetting: false,\r\n            showLogoSetting: true,\r\n\r\n            background: '#000000',\r\n            color: '#ffffff',\r\n            opacity: 1,\r\n\r\n            company: 'Powered By Master LPS',\r\n            title: props.history.location.pathname.split('/').slice(-1).pop(),\r\n\r\n            wizard_step: 2,\r\n\r\n            isLoading: false,\r\n            fontFamily: 'BlinkMacSystemFont',\r\n            logoSrc: null,\r\n            logoWidth: 20,//%\r\n            logoHeight: 100,//%\r\n\r\n            logoPosition: 'left',\r\n            logoPositionX: 'initial',\r\n            logoPositionY: 'initial',\r\n\r\n            logoCroppedImageUrl: 'https://img1.wsimg.com/isteam/ip/27dcd564-67cc-49d8-88f5-ecbd1ee7feb2/84278061_1335685009970771_8929805060758568960_.jpg/:/',\r\n            logoCrop: {\r\n                unit: '%', // default, can be 'px' or '%'\r\n                width: 100,\r\n                height: 100\r\n            },\r\n        }\r\n\r\n        this.ref = React.createRef();\r\n        this.javascript_ref = React.createRef();\r\n        this.css_ref = React.createRef();\r\n\r\n        this.logo_croper = null;\r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n\r\n        Axios.get(`admin/widget/widgets?title=${this.state.title}`).then(r => {\r\n            if (r && r.data && r.data[0]) {\r\n                var v = r.data[0]\r\n                if (typeof v.options === 'string') v.options = JSON.parse(v.options)\r\n                var op = JSON.parse(JSON.stringify(v.options))\r\n                delete v.options;\r\n                delete op.isLoading;\r\n                this.setState({ ...v, ...op, externel_links: externel_links });\r\n            }\r\n        })\r\n    }\r\n\r\n    async _save() {\r\n\r\n\r\n\r\n        var html = this.ref.current.innerHTML;\r\n        var js = this.javascript_ref.current.innerHTML;\r\n        var css = this.css_ref.current.innerHTML;\r\n        Axios.post('admin/widget/add-widget', { title: this.state.title, html: html, css: css, js: js, externel_links: externel_links, options: this.state })\r\n            .then(r => {\r\n                console.log(r)\r\n                this.props.history.goBack();\r\n            })\r\n            .catch(e => console.error(e))\r\n    }\r\n\r\n    async onSave() {\r\n        this.setState({ isLoading: true });\r\n\r\n        if (this.logo_blob) {\r\n            var formData = new FormData();\r\n\r\n            formData.append(\"file\", this.logo_blob);\r\n            Axios.post(`${REACT_APP_BASE_URL}storage/upload`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then(r => {\r\n                console.error(r.data)\r\n                this.onLogoChanged(r.data[0].src, 'logoCroppedImageUrl')\r\n\r\n                setTimeout(() => {\r\n                    this._save();\r\n                }, 2000)\r\n\r\n            });\r\n        } else {\r\n            this._save();\r\n        }\r\n    }\r\n\r\n    valueChange(e, column) {\r\n        this.setState({ [column]: e.target.value })\r\n    }\r\n\r\n\r\n    getCroppedImg(image, crop, fileName) {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = image.naturalWidth;\r\n        canvas.height = image.naturalHeight;\r\n\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height\r\n        );\r\n\r\n        return new Promise((resolve, reject) => {\r\n            canvas.toBlob(blob => {\r\n                if (!blob) {\r\n                    //reject(new Error('Canvas is empty'));\r\n                    console.error('Canvas is empty');\r\n                    return;\r\n                }\r\n                blob.name = fileName;\r\n                window.URL.revokeObjectURL(this.fileUrl);\r\n                this.logo_blob = blob;\r\n                this.fileUrl = window.URL.createObjectURL(blob);\r\n                resolve(this.fileUrl);\r\n            }, 'image/png');\r\n        });\r\n    }\r\n\r\n    onLogoChanged(value, column) {\r\n        this.setState({ [column]: value })\r\n    }\r\n\r\n    async onImageCropComplete(crop) {\r\n\r\n        if (this.logoImageRef && crop.width && crop.height) {\r\n            const croppedImageUrl = await this.getCroppedImg(\r\n                this.logoImageRef,\r\n                crop,\r\n                'newFile.png'\r\n            );\r\n            console.error(croppedImageUrl)\r\n            this.onLogoChanged(croppedImageUrl, 'logoCroppedImageUrl');\r\n        }\r\n    }\r\n\r\n    readFile(event) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => this.onLogoChanged(reader.result, 'logoSrc'));\r\n        reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n\r\n    render() {\r\n        var { wizard_step } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className='col-4 border-right'>\r\n                        <div className=\"d-flex1 wizard\">\r\n                            {this.state.wizard_step === 2 && <>\r\n                                <h4>Powered By</h4>\r\n\r\n                                <div className=\"form-group mt-3\">\r\n                                    <label className=\"form-label\" htmlFor=\"exampleRadios2\">Height</label>\r\n                                    <input type=\"number\" value={this.state.height} className=\"form-control\" onChange={(e) => { this.valueChange(e, 'height'); }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group mt-3\">\r\n                                    <label className=\"form-label\" htmlFor=\"exampleRadios2\">Company</label>\r\n                                    <input type=\"text\" value={this.state.company} className=\"form-control\" placeholder=\"Company\" onChange={(e) => { this.valueChange(e, 'company'); }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group mt-31\">\r\n                                    <label className=\"form-label\" htmlFor=\"exampleRadios2\">Font Family</label>\r\n                                    <select value={this.state.fontFamily} className=\"form-control\" onChange={(e) => this.valueChange(e, 'fontFamily')}>\r\n                                        <option>fantasy</option>\r\n                                        <option>fangsong</option>\r\n                                        <option>monospace</option>\r\n                                        <option>sans-serif</option>\r\n                                        <option>ui-serif</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <CCard>\r\n                                    <CCardHeader onClick={() => { this.setState({ showLogoSetting: !this.state.showLogoSetting }) }}>Logo Setting</CCardHeader>\r\n                                    <CCollapse show={this.state.showLogoSetting}>\r\n                                        <CCardBody>\r\n\r\n                                            <div className=\"form-group mt-31\">\r\n                                                <label className=\"form-label\">Logo</label>\r\n                                                <input className=\"form-control-file\" type=\"file\" accept=\"image/*\"\r\n                                                    onChange={(event) => this.readFile(event)}\r\n                                                    onClick={(event) => event.target.value = null} />\r\n                                            </div>\r\n\r\n                                            {this.state.logoSrc && <Cropper\r\n                                                // style={{ height: 400, width: \"100%\" }}\r\n                                                // initialAspectRatio={1}\r\n\r\n                                                src={this.state.logoSrc}\r\n                                                viewMode={1}\r\n                                                guides={false}\r\n                                                minCropBoxHeight={10}\r\n                                                minCropBoxWidth={10}\r\n                                                background={false}\r\n                                                responsive={true}\r\n                                                autoCropArea={1}\r\n                                                checkOrientation={false} // https://github.com/fengyuanchen/cropperjs/issues/671\r\n                                                onInitialized={(instance) => { this.logo_croper = instance; }}\r\n                                                ready={() => {\r\n                                                    this.onLogoChanged(this.logo_croper.getCroppedCanvas().toDataURL(), 'logoCroppedImageUrl');\r\n                                                    this.logo_croper.getCroppedCanvas().toBlob((blob) => this.logo_blob = blob)\r\n                                                }}\r\n                                                cropend={() => {\r\n                                                    this.onLogoChanged(this.logo_croper.getCroppedCanvas().toDataURL(), 'logoCroppedImageUrl');\r\n                                                    this.logo_croper.getCroppedCanvas().toBlob((blob) => this.logo_blob = blob)\r\n                                                }}\r\n                                            />\r\n                                            }\r\n\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label className=\"form-label\" htmlFor=\"exampleRadios2\">Logo Size</label>\r\n                                                <input type=\"number\" value={this.state.logoWidth} className=\"form-control\" min=\"0\" max=\"100\" onChange={(e) => { this.valueChange(e, 'logoWidth'); }} />\r\n                                                <input type=\"number\" value={this.state.logoHeight} className=\"form-control mt-2\" min=\"0\" max=\"100\" onChange={(e) => { this.valueChange(e, 'logoHeight'); }} />\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mt-31\">\r\n                                                <label className=\"form-label\" htmlFor=\"exampleRadios2\">Position</label>\r\n                                                <select value={this.state.logoPosition} className=\"form-control\" onChange={(e) => this.valueChange(e, 'logoPosition')}>\r\n                                                    <option>left</option>\r\n                                                    <option>right</option>\r\n                                                    <option>bottom</option>\r\n                                                    <option>center</option>\r\n                                                    <option>top</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label className=\"form-label\" htmlFor=\"exampleRadios2\">Position (X, Y)</label>\r\n                                                <input type=\"number\" value={this.state.logoPositionX} className=\"form-control\" onChange={(e) => { this.valueChange(e, 'logoPositionX'); }} />\r\n                                                <input type=\"number\" value={this.state.logoPositionY} className=\"form-control mt-2\" onChange={(e) => { this.valueChange(e, 'logoPositionY'); }} />\r\n                                            </div>\r\n\r\n                                        </CCardBody>\r\n                                    </CCollapse>\r\n                                </CCard>\r\n\r\n                                <CCard>\r\n                                    <CCardHeader onClick={() => { this.setState({ showColorSetting: !this.state.showColorSetting }) }}>Color Setting</CCardHeader>\r\n                                    <CCollapse show={this.state.showColorSetting}>\r\n                                        <CCardBody>\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label className=\"form-label\" htmlFor=\"exampleRadios2\">Background Color</label>\r\n                                                <input type=\"color\" value={this.state.background} className=\"form-control\" placeholder=\"Background\" onChange={(e) => { this.valueChange(e, 'background'); }} />\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label className=\"form-label\" htmlFor=\"exampleRadios2\">Text Color</label>\r\n                                                <input type=\"color\" value={this.state.color} className=\"form-control\" onChange={(e) => { this.valueChange(e, 'color'); }} />\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label className=\"form-label\" htmlFor=\"exampleRadios2\">Opacity</label>\r\n                                                <input type=\"number\" value={this.state.opacity} className=\"form-control\" min=\"0\" max=\"1\" step=\"0.1\" onChange={(e) => { this.valueChange(e, 'opacity'); }} />\r\n                                            </div>\r\n                                        </CCardBody>\r\n                                    </CCollapse>\r\n                                </CCard>\r\n\r\n\r\n                                <div className=\"form-group mt-3\">\r\n                                    <label className=\"form-label\" htmlFor=\"exampleRadios2\">Margin Top</label>\r\n                                    <input type=\"number\" value={this.state.marginTop} className=\"form-control\" onChange={(e) => { this.valueChange(e, 'marginTop'); }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group mt-3\">\r\n                                    <label className=\"form-label\" htmlFor=\"exampleRadios2\">Margin Bottom</label>\r\n                                    <input type=\"number\" value={this.state.marginBottom} className=\"form-control\" onChange={(e) => { this.valueChange(e, 'marginBottom'); }} />\r\n                                </div>\r\n\r\n\r\n                                <CCard>\r\n                                    <CCardHeader onClick={() => { this.setState({ showPaddingSetting: !this.state.showPaddingSetting }) }}>Padding Setting</CCardHeader>\r\n                                    <CCollapse show={this.state.showPaddingSetting}>\r\n                                        <CCardBody>\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label className=\"form-label\" htmlFor=\"exampleRadios2\">Top</label>\r\n                                                <input type=\"number\" value={this.state.paddingTop} className=\"form-control\" min=\"0\" onChange={(e) => { this.valueChange(e, 'paddingTop'); }} />\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label className=\"form-label\" htmlFor=\"exampleRadios2\">Bottom</label>\r\n                                                <input type=\"number\" value={this.state.paddingBottom} className=\"form-control\" min=\"0\" onChange={(e) => { this.valueChange(e, 'paddingBottom'); }} />\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label className=\"form-label\" htmlFor=\"exampleRadios2\">Left</label>\r\n                                                <input type=\"number\" value={this.state.paddingLeft} className=\"form-control\" min=\"0\" onChange={(e) => { this.valueChange(e, 'paddingLeft'); }} />\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label className=\"form-label\" htmlFor=\"exampleRadios2\">Right</label>\r\n                                                <input type=\"number\" value={this.state.paddingRight} className=\"form-control\" min=\"0\" onChange={(e) => { this.valueChange(e, 'paddingRight'); }} />\r\n                                            </div>\r\n\r\n                                        </CCardBody>\r\n                                    </CCollapse>\r\n                                </CCard>\r\n\r\n                                <div className=\"form-group mt-31\">\r\n                                    <label className=\"form-label\" htmlFor=\"exampleRadios2\">Text Align</label>\r\n                                    <select value={this.state.align} className=\"form-control\" onChange={(e) => { this.valueChange(e, 'align'); }}>\r\n                                        <option value=\"center\">Center</option>\r\n                                        <option value=\"right\">Right</option>\r\n                                        <option value=\"left\">Left</option>\r\n                                    </select>\r\n                                </div>\r\n                            </>\r\n                            }\r\n\r\n                            {this.state.wizard_step < CONFIG[this.state.title].max_wizard && <button className=\"btn btn-primary mt-5 float-right\" onClick={() => {\r\n                                this.setState({ wizard_step: wizard_step + 1 })\r\n                            }}\r\n                                disabled={this.state.wizard_step === 2}>Next</button>}\r\n\r\n                            {this.state.wizard_step === CONFIG[this.state.title].max_wizard &&\r\n                                <>\r\n                                    <CButton className=\"mt-5 float-right\" type=\"submit\" size=\"sm\" color=\"primary\" onClick={() => { this.onSave() }}><CIcon name=\"cil-scrubber\" />\r\n                                        Save{this.state.isLoading && <span className=\"spinner-border spinner-border-sm ml-1\" role=\"status\" aria-hidden=\"true\"></span>}\r\n                                    </CButton>\r\n                                </>\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-8'>\r\n                        <h4 className=\"text-center\">Live Preview</h4>\r\n                        <div className=\"border pb-5\">\r\n                            <div ref={this.ref} style={{\r\n                                background: this.state.background, opacity: this.state.opacity,\r\n                                color: this.state.color, textAlign: this.state.align, fontFamily: this.state.fontFamily,\r\n                                margin: 'auto', marginTop: this.state.marginTop + 'px', marginBottom: this.state.marginBottom + 'px',\r\n                                paddingTop: this.state.paddingTop + 'px',\r\n                                paddingBottom: this.state.paddingBottom + 'px',\r\n                                paddingLeft: this.state.paddingLeft + 'px',\r\n                                paddingRight: this.state.paddingRight + 'px',\r\n                                height: this.state.height + 'px',\r\n                                backgroundImage: `url(${this.state.logoCroppedImageUrl})`,\r\n                                backgroundSize: `${this.state.logoWidth}% ${this.state.logoHeight}%`,\r\n                                backgroundRepeat: 'no-repeat',\r\n                                backgroundPosition: this.state.logoPosition,\r\n                                backgroundPositionX: this.state.logoPositionX + 'px',\r\n                                backgroundPositionY: this.state.logoPositionY + 'px',\r\n                            }}>\r\n                                <span style={{}}>{this.state.company}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Used for save javascript */}\r\n                        <pre ref={this.javascript_ref} style={{ display: 'none' }}></pre>\r\n                        {/* Used for save css */}\r\n                        <pre ref={this.css_ref} style={{ display: 'none' }}></pre>\r\n\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WidgetViewPoweredBy\r\n"],"sourceRoot":""}